name: Notify Microsoft Teams on new PR

on:
  pull_request:
    types: [opened, ready_for_review]

jobs:
  notify-teams:
    runs-on: ubuntu-latest

    steps:
      - name: Send Teams notification
        uses: actions/github-script@v7
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        with:
          script: |
            const pr = context.payload.pull_request;

            const prNumber   = pr.number;
            const prTitle    = pr.title;
            const prUrl      = pr.html_url;
            const prAuthor   = pr.user.login;
            const baseBranch = pr.base.ref;   // branch ƒë√≠ch, v√≠ d·ª•: main / develop
            const repoName   = context.repo.repo;
            const ownerName  = context.repo.owner;

            // N·ªôi dung ch√≠nh s·∫Ω g·ª≠i sang Teams.
            // Teams Incoming Webhook ch·∫•p nh·∫≠n JSON ki·ªÉu "MessageCard". :contentReference[oaicite:4]{index=4}
            // L∆∞u √Ω: Kh√¥ng th·ªÉ @channel b·∫±ng webhook, n√™n ta s·∫Ω nh·∫•n m·∫°nh b·∫±ng emoji/c·∫£nh b√°o.
            const cardPayload = {
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "themeColor": "FF0000", // ƒë·ªè c·∫£nh b√°o
              "summary": `PR #${prNumber} - ${prTitle}`,
              "title": `üö® Pull Request m·ªõi c·∫ßn review`,
              "sections": [
                {
                  "activityTitle": `**${ownerName}/${repoName}**`,
                  "activitySubtitle": `PR #${prNumber}: ${prTitle}`,
                  "facts": [
                    {
                      "name": "T√°c gi·∫£",
                      "value": prAuthor
                    },
                    {
                      "name": "Target branch",
                      "value": baseBranch
                    },
                    {
                      "name": "Link PR",
                      "value": prUrl
                    }
                  ],
                  "markdown": true
                }
              ],
              "potentialAction": [
                {
                  "@type": "OpenUri",
                  "name": "üîç Xem PR ngay",
                  "targets": [
                    { "os": "default", "uri": prUrl }
                  ]
                }
              ]
            };

            const res = await fetch(process.env.TEAMS_WEBHOOK_URL, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(cardPayload),
            });

            if (!res.ok) {
              core.setFailed("Teams webhook failed: " + (await res.text()));
            }
